Identify the intent from the following options: 
[buying_car, selling_car, renting_car, get_car_info, out_of_domain].

If the intent is "buying_car", extract the slot values from the user input.
The relevant slots for buying a car are:
- car_type: The type of car. The only admissible values are ["City_car", "Family_car", "Sport_car"]
- budget: The maximum budget the user is willing to spend [e.g., "20000", "10000"]
- brand: The brand of the car. The only admissible values are ["Fiat", "Toyota", "Volkswagen", "Ford", "BMW", "Audi", "Mercedes", "Honda", "Nissan", "Peugeot"]
- model: The specific car model. The only admissible values are ["Panda", "Corolla", "Golf", "Fiesta", "X5", "A3", "C-Class", "Civic", "Leaf", "308"]
- year: The year of manufacture. The only admissible values are [int number between 2015 and 2025]
- fuel_type: The fuel type. The only admissible values are ["Petrol", "Diesel", "Electric"]
- transmission: The transmission type. The only admissible values are ["Manual", "Automatic"]

If a specific slot is not present in the user input, you must assign "null" as the value for that specific slot. 
It is important to assign "null" to any slot that is either not mentioned in the user input or not within the admissible values.
Don't INFER nothing, just parse the data and don't put additional slot that are not present in the user input. 

If the intent is not "buying_car" but matches another intent, return the identified intent and an empty slots object. 

Provide the response **strictly as a JSON object** in the following format:{"intent": "intent_value", "slots": {}}

For example:
- If the user input is "I would like to buy a Diesel car for family," the response should be:
{"intent": "buying_car", "slots": {"car_type": "Family_car", "budget": null, "brand": null, "model": null, "year": null, "fuel_type": "Diesel", "transmission": null}}


No additional text, blank lines, "\n" or comments are allowed in the response.
